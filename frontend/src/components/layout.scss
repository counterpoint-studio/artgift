@import "reset.scss";
@import "typography.scss";
@import "~react-inputs-validation/lib/react-inputs-validation.min.css";

html,
body {
  height: 100%;
  overscroll-behavior: none;
  position: relative;
  background: #222;
}

.content {
  z-index: 1; // everything on top of map
  position: fixed;
  top: 4vw;
  bottom: 4vw;
  left: 4vw;
  width: 92vw;

  @media (min-width: 768px) {
    top: calc((2 * #{$frameMargin}) + #{$frameWidth});
    bottom: calc((2 * #{$frameMargin}) + #{$frameWidth});
    left: calc((2 * #{$frameMargin}) + #{$frameWidth});
    width: 500px;
  }

  // HF yellow frame
  &:after {
    content: "";
    display: block;
    position: fixed;
    border: $frameWidth solid $colorHFYellow;
    pointer-events: none;
    top: $frameMargin * 2;
    right: $frameMargin * 2;
    bottom: $frameMargin * 2;
    left: $frameMargin * 2;

    @media (min-width: 768px) {
      top: $frameMargin;
      right: $frameMargin;
      bottom: $frameMargin;
      left: $frameMargin;
    }
  }

  .header {
    display: none;

    @media (min-width: 768px) {
      display: block;
      position: fixed;
      top: calc((2 * #{$frameMargin}) + #{$frameWidth});
      right: calc((2 * #{$frameMargin}) + #{$frameWidth});
      width: 250px;
    }
  }

  .main {
    position: relative;
    height: 100%;
    display: grid;
    grid-template-rows: auto 1fr;
    background: $colorBackground;

    .scroll {
      // position: absolute;
      // top: 0;
      // right: 0;
      // bottom: 0;
      // left: 0;
      overflow: auto;
      mask-image: linear-gradient(
        180deg,
        rgba(0, 0, 0, 1) 0%,
        rgba(0, 0, 0, 1) 90%,
        rgba(0, 0, 0, 0) 100%
      );
      -ms-overflow-style: none;
      scrollbar-width: none;

      &::-webkit-scrollbar {
        display: none;
      }

      padding: 30px 30px 0 30px;

      @media (min-width: 768px) {
        padding: 60px 60px 0 60px;
      }
    }
  }

  .footer {
    @media (min-width: 768px) {
      position: fixed;
      right: calc((2 * #{$frameMargin}) + #{$frameWidth});
      bottom: calc((2 * #{$frameMargin}) + #{$frameWidth});
    }
  }
}

.button {
  display: block;
  background: black;
  text-align: center;
  text-transform: uppercase;
  color: white;
  cursor: pointer;

  &:focus {
    outline: none;
  }

  &.disabled {
    pointer-events: none;
    background: $colorHFGrey;
  }

  &--next {
    margin-top: $fontSizeBase * 1.5;
  }

  &--book {
    display: inline-block;
    font-size: 10px;
    padding: 0px 10px;
  }
}

.inputGroup {
  display: flex;
  flex-flow: column nowrap;
  margin-bottom: $fontSizeBase * 2;

  label {
    display: inline-block;
    font-size: $fontSizeBaseMobile;
    line-height: $fontSizeBaseMobile * 1.25;

    @media (min-width: 768px) {
      font-size: $fontSizeBase;
      line-height: $fontSizeBase * 1.25;
    }
  }

  .requiredField {
    color: red;
  }

  input[type="text"],
  input[type="email"],
  input[type="tel"] {
    width: 100%;
    height: 40px;
    padding-left: 0;
    padding-right: 0;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid black;
    font-size: $fontSizeBaseMobile;

    // &.react-inputs-validation__textbox__input___20hDL {
    //   border: 0;
    //   border-bottom: 1px solid red;
    // }

    // &.react-inputs-validation__msg___pxv8o {
    //   color: red;
    // }

    @media (min-width: 768px) {
      font-size: $fontSizeBase;
    }

    &:focus {
      outline: none;
    }
  }

  select {
    appearance: none;
    position: relative;
    display: flex;
    align-items: center;
    height: 42px;
    width: 100%;
    margin-top: $fontSizeBase;
    padding: 0 28px 3px 12px;
    background: rgba(white, 0.1)
      url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 7.2'%3E%3Cpath style='fill:%23000000' d='M0,1.6,6,7.2l6-5.6L10.4,0,6,4,1.6,0Z'/%3E%3C/svg%3E")
      right 13px top 15px / 10px 12px no-repeat;
    border: 1px solid rgba(black, 1);
    border-radius: 0px;
    cursor: pointer;
    font-size: $fontSizeBaseMobile;
    line-height: 1.25;
    text-indent: 0;
    transition: background-color 0.15s ease;
    color: black;

    option {
      color: black;
    }

    @media (min-width: 768px) {
      font-size: $fontSizeBase;
    }

    &:focus {
      outline: none;
    }

    &:hover {
      background-color: rgba(white, 0.15);
    }
  }

  textarea {
    margin-top: $fontSizeBase;
    border-radius: 0;
    border: 1px solid black;
    padding: (0.5 * $fontSizeBase);
    line-height: 1.25;

    &:focus {
      outline: none;
    }
  }

  .inputCheckbox {
    position: relative;
    margin: 0;

    input[type="checkbox"] {
      padding: 0;
      margin: 0;
      position: absolute;
      left: -999999px;
    }

    label {
      display: block;
      position: relative;
      padding-left: 30px;
      cursor: pointer;
      user-select: none;
      line-height: 1.5;

      &:before {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 20px;
        height: 20px;
        border: 2px solid #888;
        border-radius: 20px;
      }
    }

    input[type="checkbox"]:checked ~ label:after {
      content: "";
      display: block;
      position: absolute;
      top: 0px;
      left: 4px;
      width: 20px;
      height: 17px;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 9.59 7.2'%3E%3Cpath d='M3.15,7.2A.75.75,0,0,1,2.62,7L.22,4.58A.75.75,0,0,1,1.28,3.52L3.15,5.39,8.31.22a.75.75,0,0,1,1.06,0,.74.74,0,0,1,0,1.06L3.68,7A.79.79,0,0,1,3.15,7.2Z'/%3E%3C/svg%3E");
      background-size: 100% auto;
      background-repeat: no-repeat;
      background-position: top left;
    }
  }
}
